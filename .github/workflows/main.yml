name: Build
on:
  pull_request:
  push:
    branches:
      - main

env:
  GO_VERSION: "stable"
  APP: "stunmesh"

jobs:
  codegen:
    name: Codegen
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false
      - run: go install github.com/google/wire/cmd/wire@latest
      - run: wire .
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'wire .' command and commit."; exit 1)

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Lint
        uses: ./.github/actions/lint
        with:
          go-version: ${{ env.GO_VERSION }}

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Test
        uses: ./.github/actions/test
        with:
          go-version: ${{ env.GO_VERSION }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    strategy:
      matrix:
        os: [linux, darwin, freebsd]
        arch: [amd64, arm64, arm, mipsle]
        exclude:
          - os: darwin
            arch: mipsle
          - os: darwin
            arch: arm
          - os: freebsd
            arch: arm
          - os: freebsd
            arch: mipsle
    steps:
      - uses: actions/checkout@v4
      - name: Build
        uses: ./.github/actions/build
        id: build
        with:
          os: ${{ matrix.os }}
          arch: ${{ matrix.arch }}
          app-name: ${{ env.APP }}
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build.outputs.binary-name }}
          path: ${{ steps.build.outputs.binary-name }}

  build-plugins:
    name: Build Plugins
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    strategy:
      matrix:
        os: [linux, darwin, freebsd]
        arch: [amd64, arm64, arm, mipsle]
        exclude:
          - os: darwin
            arch: mipsle
          - os: darwin
            arch: arm
          - os: freebsd
            arch: arm
          - os: freebsd
            arch: mipsle
    steps:
      - uses: actions/checkout@v4
      - name: Build All Plugins
        uses: ./.github/actions/build-all-plugins
        id: build-plugins
        with:
          os: ${{ matrix.os }}
          arch: ${{ matrix.arch }}
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build-plugins.outputs.artifact-name }}
          path: contrib/*/stunmesh-*
          if-no-files-found: warn

  docker:
    if: github.event_name != 'pull_request'
    name: Build Docker container
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - uses: actions/checkout@v4
      - name: Build and Push Docker
        uses: ./.github/actions/docker
        with:
          app-name: ${{ env.APP }}
          docker-token: ${{ secrets.DOCKER_TOKEN }}
          repository-owner: ${{ github.repository_owner }}
