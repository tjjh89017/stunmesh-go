name: Build
on:
  pull_request:
  push:
    branches:
      - main

env:
  GO_VERSION: "1.22"
  CGO_ENABLED: "0"
  APP: "stunmesh"

jobs:
  codegen:
    name: Codegen
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false
      - run: go install github.com/google/wire/cmd/wire@latest
      - run: wire .
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'wire .' command and commit."; exit 1)

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.63.4

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Test
        run: go test -cover -v ./...

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    strategy:
      matrix:
        os: [linux, darwin]
        arch: [amd64, arm64, arm, mipsle]
        exclude:
          - os: darwin
            arch: mipsle
          - os: darwin
            arch: arm
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Build
        run: go build -v -o ${{ env.APP}}-${{ matrix.os }}-${{ matrix.arch }} .
        env:
          CGO_ENABLED: 0
          GOARCH: ${{ matrix.arch }}
          GOOS: ${{ matrix.os }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP }}-${{ matrix.os }}-${{ matrix.arch }}
          path: ${{ env.APP }}-${{ matrix.os }}-${{ matrix.arch }}

  docker:
    if: github.event_name != 'pull_request'
    name: Build Docker container
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ github.repository_owner }}/${{ env.APP }}
      - uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64,linux/arm
          push: true
          tags: ${{ steps.meta.outputs.tags }},${{ github.repository_owner }}/${{ env.APP }}:latest
          labels: ${{ steps.meta.outputs.labels }}
