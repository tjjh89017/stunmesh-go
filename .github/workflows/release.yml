name: Release
on:
  push:
    tags:
      - '*'

env:
  GO_VERSION: "stable"
  APP: "stunmesh"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Lint
        uses: ./.github/actions/lint
        with:
          go-version: ${{ env.GO_VERSION }}

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Test
        uses: ./.github/actions/test
        with:
          go-version: ${{ env.GO_VERSION }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    permissions:
      contents: write
    strategy:
      matrix:
        os: [linux, darwin, freebsd]
        arch: [amd64, arm64, arm, mipsle]
        exclude:
          - os: darwin
            arch: arm
          - os: darwin
            arch: mipsle
          - os: freebsd
            arch: arm
          - os: freebsd
            arch: mipsle
    steps:
      - uses: actions/checkout@v4
      - name: tag
        id: tag
        run: echo "TAG=$(git describe --tags --dirty)" >> "$GITHUB_OUTPUT"
      - name: Build
        uses: ./.github/actions/build
        id: build
        with:
          os: ${{ matrix.os }}
          arch: ${{ matrix.arch }}
          app-name: ${{ env.APP }}
          go-version: ${{ env.GO_VERSION }}
          tag: ${{ steps.tag.outputs.TAG }}
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.build.outputs.binary-name }}
          prerelease: >-
            ${{
              contains(steps.tag.outputs.TAG, 'RC') ||
              contains(steps.tag.outputs.TAG, 'rc')
            }}

  release-plugins:
    name: Release Plugins
    runs-on: ubuntu-latest
    needs:
      - release
    permissions:
      contents: write
    strategy:
      matrix:
        os: [linux, darwin, freebsd]
        arch: [amd64, arm64, arm, mipsle]
        exclude:
          - os: darwin
            arch: arm
          - os: darwin
            arch: mipsle
          - os: freebsd
            arch: arm
          - os: freebsd
            arch: mipsle
    steps:
      - uses: actions/checkout@v4
      - name: tag
        id: tag
        run: echo "TAG=$(git describe --tags --dirty)" >> "$GITHUB_OUTPUT"
      - name: Build All Plugins
        uses: ./.github/actions/build-all-plugins
        with:
          os: ${{ matrix.os }}
          arch: ${{ matrix.arch }}
          go-version: ${{ env.GO_VERSION }}
      - name: Archive Plugins
        uses: ./.github/actions/archive-plugins
        id: archive
        with:
          os: ${{ matrix.os }}
          arch: ${{ matrix.arch }}
          source-dir: plugins_dist
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ steps.archive.outputs.zip-file }}
            ${{ steps.archive.outputs.tar-file }}
          prerelease: >-
            ${{
              contains(steps.tag.outputs.TAG, 'RC') ||
              contains(steps.tag.outputs.TAG, 'rc')
            }}

  docker:
    name: Build Docker container
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - uses: actions/checkout@v4
      - name: Build and Push Docker
        uses: ./.github/actions/docker
        with:
          app-name: ${{ env.APP }}
          docker-token: ${{ secrets.DOCKER_TOKEN }}
          repository-owner: ${{ github.repository_owner }}
